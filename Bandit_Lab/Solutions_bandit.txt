https://overthewire.org/wargames/bandit/

# BANDIT 1
ssh bandit1@bandit.labs.overthewire.org -p 2220
NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL

# QUIERO QUE BUSQUE UNA PALABRA QUE ME MUESTRE LA ULTIMA LINEA, QUE LA RECORTE AL SEGUNDO ARGUMENTO TOMANDO COMO DELIMITANTE LOS ":"
grep -r '\w' 2>/dev/null | tail -n 1 | awk '{print $2}' FS=":"
grep -r '\w' 2>/dev/null | tail -n 1 | cut -d ":" -f 2

grep -r '\w' 2>/dev/null | tail -n 1 | tr ':' ' ' | awk '{print $2}'

grep -r '\w' 2>/dev/null | tail -n 1 | tr ':' ' ' | awk 'NF{print $NF}'

grep -r '\w' 2>/dev/null | tail -n 1 | tr ':' ' ' | rev | awk '{print $1}' | rev 

echo -e "\n[+] La contraseña de bandit2 es $(grep -r '\w' 2>/dev/null | tail -n 1 | tr ':' ' ' | rev | awk '{print $1}' | rev )\n:

cat <-


BANDIT 10
# CODIFICACION Y DECODIFICACION EN BASE 64
echo "Hola esto es una prueba" | base64
cat /etc/hosts | base64 
# CUANDO QUIERES QUE LA CODIFICACION ESTE EN UNA SOLA LINEA 
cat /etc/hosts | base64 -w 0
# DECODIFICAR UNA CADENA
echo "3r32r435gsdfgsdfqweq" | base64 -d


# BANDIT 12

# ROTACION DE 13 CARACTERES SIN root13.com, SUSTITUCION DE UNOS CARACTERES POR OTROS CARACTERES PARA EL EJEMPLO DEL TEXTO QUE ROTARON 13 VECES
cat data.txt | tr '[G-ZA-Fg-za-f]' '[T-ZA-St-za-s]' 
# SEGUNDO 
cat data.txt | tr '[A-Za-Z]' '[N-ZA-Mn-za-m]'

# BANDIT 12 
# CIFRADO HEXADECIMAL 
cat /etc/hosts | xxd
# CIFRADO HEXADECIMAL MOSTRANDO SOLO LO HEXADECIMAL Y OMITINEDO LO IRRELEVANTE
cat /etc/hosts | xxd -ps 
# HACER EL PROCESO INVERSO, VER QUE DATOS PUSISTE EN HEXADECIMAL
echo "34324213214359abc98879cabf987acb98c978f" | xdd -ps -r
# PARA REALIZAR ACCIONES EN UN ARCHIVO APLICARLE FILTROS Y LUEGO EL RESULTADO VOLVER A METERLO AL MISMO ARCHIVO REQUERIMOS EL COMANDO ESPECIAL sponge
#ME ESTOY QUEDANDO CON EL TERCER ARGUMENTO EL OUTPUT LO METO AL ARCHIVO SOBREESCRIVIENDO LO QUE HABIA EN ESE ARCHIVO.
cat test | awk '{print $3}' | sponge test
# DESCOMPRIMIR UN ARCHIVO .gz
gunzip data.gz
7z data.gz
# VER LO QUE TIENE DENTRO EL ARCHIVO CON 7z
7z l data.gz
# DESCOMPRIMIR SIN IMPORTAR CUAL SEA EL TIPO DE COMPRIMIDO
7z x data.gz
# PRACTICA REALIZADA EN EL ARCHIVO script_bandit13.sh


# BANDIT 15 (Uso de netcat para realizar conexiones)
# VER LOS PUERTOS QUE TIENES ABIERTOS
ss -nltp
# VER LOS PUERTOS ABIERTOS CON LA RUTA /proc/net/tcp
cat /proc/net/tcp 

# CON UN WHILE VAMOS A ITERAR A TODAS ESTAS LINEAS PARA DECIFRARLAS
echo "0035
E115
0277
0035
14EB
9A27
0016
0035
A74E
D004
889C
BBFA
A362
ED2A" | while read line; do echo "Estamos la linea con el valor $line"; done

# SEGUNDA MANERA
for line in $(echo "0035
E115
0277
0035
14EB
9A27
0016
0035
A74E
D004
889C
BBFA
A362
ED2A"); do  echo -e "[+] Mostrando el contenido de la linea ${line}"
done

# BASH HEXADECIMAL TO DECIMAL IBASE OBASE, ESTO CONVIERTE A BASE 10 Y CON SORT TE ORDENA
echo "0035
E115
0277
0035
14EB
9A27
0016
0035
A74E
D004
889C
BBFA
A362
ED2A" | while read line; do echo "[+] Puerto ${line} -> $(echo "obase=10; ibase=16; $line" | bc) - OPEN"; done | sort -u

# VER QUE SERVICIO ESTA CORRIENDO EN BASE A UN PUERTO
lsof -i:22
lsof -i:6600

# LISTAR TODOS LOS PROCESO DEL SISTEMA
ps -faux

# LISTAR LOS COMANDOS ESPECIFICOS QUE SE ESTAN LISTANDO EN EL SISTEMA
ps -eo command



# BANDIT 16
which nc
# ncat QIE ES SIMILAR A UN nc (NETCAT) TIENE UN PARAMETRO QUE ES EL --ssl ESTO NOS PERMITE ENCRYPTAR EL TRAFICO USALDO SSL
ncat --ssl localhost 30001


# BANDIT 17

# EL COMANDO ss -nltp SE UTILIZA PARA MOSTRAR TODAS LAS CONEXIONES DE RED EN EL SISTEMA QUE ESTAN ESCUCHANDO (l)EN MODO TCP (-t) Y UDP (-u),JUNTO CON LOS PROCESOS ASOCIADOS A ESAS CONEXIONES (-p) 
# -n: Esta opción indica a ss que muestre direcciones IP y números de puerto en formato numérico en lugar de resolverlos a nombres de host y servicios. En otras palabras, cuando utilizas -n, verás direcciones IP y números de puerto en su forma numérica, lo que puede ser útil en situaciones donde no necesitas la resolución de nombres de host o servicios y prefieres ver los datos de manera más directa.
# -l: La opción -l significa "listen" (escuchar). Al usar -l, ss solo mostrará conexiones que estén en estado de escucha, es decir, que estén esperando conexiones entrantes. Esto es útil cuando quieres ver qué servicios están activos y esperando conexiones en tu sistema en lugar de mostrar todas las conexiones, incluidas las que están establecidas o en otros estados.conexiones entrantes.
# -t: Muestra solo conexiones TCP.
# -u: Muestra solo conexiones UDP.
# -p: Muestra el nombre del programa y el número de PID asociados a cada conexión.
ss -nltp

nmap --open -T5 -v -n -p31000-32000 127.0.0.1

# BANDIT 20
# PONERTE EN ESCUCHA EN UN PUERTO CON LA HERRAMIENTA NETCAT
nc -nlvp 4646


# BANDIT 23
#!/bin/bash

myname=$(whoami)

cd /var/spool/${whoami}
echo "Executing and deleting all scripts in /var/spool/${myname}:"

for i in * .*;
do
  if [ "${i}" != "." -a "${i}" != ".." ]'
  then
    echo "Handling ${i}"
    owner="$(stat --format "%U" ./${i})"
    if [ "${owner}" = "bandit23" ]; then
      timeout -s 9 60 ./${i}
      fi
      rm -f ./${i}
    fi
  done



# CADA SEGUNDO MONITORIZA LO QUE PASA EN EL DIRECTORIO EN EL QUE ESTAS
watch -n 1 ls -l

# BANDIT 26
for ping in {000 9999}; do echo "efrdfg$%#$^FEwfewfwef ${pin}"; 
done > combinatios.txt

cat combinatios.txt | nc localhost 30002 | grep -vE 'Wrong|Please enter'


# BANTIT 26
# CON MORE PUEDES ASIGNAR UNA VARIABLE EN EL MODO VISUAL: set=/bin/bash Y DEPUES EJECUTARLA 


# BANDIT 34 
En Bash se pueden usar argumentos desde la línea de comandos, los cuales son enviados a los scripts como variables. Estos quedarían representados de la siguiente forma:

[$0]: Representa el nombre del script que se invocó desde la terminal.

[$1]: Es el primer argumento desde la línea de comandos.

[$2]: Es el segundo argumento desde la línea de comandos y así sucesivamente.

[$#]: Contiene el número de argumentos que son recibidos desde la línea de comandos.

[$*]: Contiene todos los argumentos que son recibidos desde la línea de comandos, guardados todos en la misma variable.